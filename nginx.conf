# worker_processes 1;

# user apiuser apigroup;
# # 'user apiuser apigroup;' for systems with 'nobody' as a group instead
# error_log  /var/log/nginx/error.log warn;
# pid /var/run/nginx.pid;

# events {
#   worker_connections 1024; # increase if you have lots of clients
#   accept_mutex off; # set to 'on' if nginx worker_processes > 1
#   # 'use epoll;' to enable for Linux 2.6+
#   # 'use kqueue;' to enable for FreeBSD, OSX
# }

# http {
#   include mime.types;
#   # fallback in case we can't determine a type
#   default_type application/octet-stream;
#   access_log /var/log/nginx/access.log combined;
#   sendfile on;

#   upstream backend {
#     server localhost:5000;
#     keepalive 32;
#   }

#   upstream app_server {
#     # fail_timeout=0 means we always retry an upstream even if it failed
#     # to return a good HTTP response

#     # for UNIX domain socket setups
#     server unix:/tmp/gunicorn.sock fail_timeout=0;

#     # for a TCP configuration
#     # server 192.168.0.7:8000 fail_timeout=0;
#   }

#   server {
#     listen 80;
#     server_name your_domain www.your_domain;

#     location / {
#         include proxy_params;
#         proxy_pass http://unix:/home/sammy/myproject/myproject.sock;
#     }
# }
upstream backend {
   server localhost:5000;
   keepalive 32;
}

server {
    listen 80;
    server_name localhost;

    location / {
        include proxy_params;
        proxy_pass http://unix:/opt/api/app.sock;
    }
}